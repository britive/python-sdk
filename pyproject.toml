[build-system]
requires = [
    "setuptools",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "britive"
authors = [{name = "Britive Inc.", email = "support@britive.com"}]
description = "A pure Python SDK for the Britive API"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet",
    "Topic :: Security",
]
license = {file = "LICENSE"}
requires-python = ">=3.9"
dependencies = [
    "requests>=2.32.0",
    "jmespath>=1.0.1"
]
dynamic = ["version"]
keywords = ["britive", "cpam", "identity", "jit"]

[project.optional-dependencies]
azure = ["azure-identity"]

[project.urls]
Homepage = "https://www.britive.com"
Documentation = "https://docs.britive.com/v1/docs/en/overview-britive-apis"
Repository = "https://github.com/britive/python-sdk.git"
Issues = "https://github.com/britive/python-sdk/issues"
Changelog = "https://github.com/britive/python-sdk/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "britive.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py311
isolated_build = True

[testenv]
# install dependencies virtualenv where commands will be executed
deps =
    -rrequirements.txt
commands =
    # NOTE: you can run any command line tool here - not just tests
    pytest -v
passenv = BRITIVE_TENANT,BRITIVE_API_TOKEN,BRITIVE_TEST_ENV_ACCOUNT_ID,BRITIVE_TEST_IGNORE_SCAN,BRITIVE_GCP_TEST_APP_ID
"""

[tool.pymarkdown]
plugins.md013.line_length = 120
plugins.md013.code_block_line_length = 120

[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "tests/*.py"]
line-length = 120

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "single"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "I", # isort
    "PL", #pylint
    "SIM", # flake8-simplify
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["F403", "F405"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str"]
max-args = 12
max-branches = 30
max-returns = 8
max-statements = 72
